<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:Infrastructure"
                    xmlns:hc="https://handyorg.github.io/handycontrol">


	<ResourceDictionary.MergedDictionaries>
		<hc:Theme Name="HandyTheme" />
	</ResourceDictionary.MergedDictionaries>

	<!--Fonts-->
	<system:Double x:Key="NormalFontSize">14</system:Double>
	<FontFamily x:Key="NormalFont">Century Gothic</FontFamily>
	<system:Double x:Key="HintFontSize">12</system:Double>
	<FontFamily x:Key="HintFont">Segoe UI</FontFamily>
	<system:Double x:Key="SubHeaderFontSize">26</system:Double>
	<FontFamily x:Key="SubHeaderFont">Corbel</FontFamily>
	<system:Double x:Key="BigFontSize">36</system:Double>
	<FontFamily x:Key="BigFont">Nirmala UI</FontFamily>

	<!--Colors-->
	<Color x:Key="Dark">#0D2340</Color>
	<Color x:Key="DarkHint">#7A90AC</Color>
	<Color x:Key="Medium">#184A8C</Color>
	<Color x:Key="Light">#BEF2DC</Color>
	<Color x:Key="Light2">#F1EEC1</Color>
	<Color x:Key="LightHint">#F8E1DF</Color>
	<Color x:Key="LightAccent">#F26F63</Color>
	<Color x:Key="MediumAccent">#CD5146</Color>
	<Color x:Key="DarkAccent">#8C184E</Color>

	<!--Brushes-->
	<SolidColorBrush x:Key="DarkBrush" Color="{StaticResource Dark}" />
	<SolidColorBrush x:Key="DarkHintBrush" Color="{StaticResource DarkHint}" />
	<SolidColorBrush x:Key="MediumBrush" Color="{StaticResource Medium}" />
	<SolidColorBrush x:Key="LightBrush" Color="{StaticResource Light}" />
	<SolidColorBrush x:Key="Light2Brush" Color="{StaticResource Light2}" />
	<SolidColorBrush x:Key="LightHintBrush" Color="{StaticResource LightHint}" />
	<SolidColorBrush x:Key="LightAccentBrush" Color="{StaticResource LightAccent}" />
	<SolidColorBrush x:Key="MediumAccentBrush" Color="{StaticResource MediumAccent}" />
	<SolidColorBrush x:Key="DarkAccentBrush" Color="{StaticResource DarkAccent}" />


	<!-- Border Styles-->
	<local:WidthAndHeightToRectConverter x:Key="WidthAndHeightToRectConverter" />
	<Style x:Key="BorderClip" TargetType="Border">
		<Setter Property="Clip">
			<Setter.Value>
				<RectangleGeometry
					RadiusX="{Binding CornerRadius.TopLeft, RelativeSource={RelativeSource AncestorType={x:Type Border}}}"
					RadiusY="{Binding RadiusX, RelativeSource={RelativeSource Self}}">
					<RectangleGeometry.Rect>
						<MultiBinding
							Converter="{StaticResource WidthAndHeightToRectConverter}">
							<Binding Path="ActualWidth" RelativeSource="{RelativeSource AncestorType={x:Type Border}}" />
							<Binding Path="ActualHeight" RelativeSource="{RelativeSource AncestorType={x:Type Border}}" />
						</MultiBinding>
					</RectangleGeometry.Rect>
				</RectangleGeometry>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="RoundedWithShadowRedBorder" TargetType="ContentControl">
		<Border BorderBrush="Transparent" BorderThickness="6"
		        CornerRadius="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=15}"
		        Background="Transparent">
			<Border>
				<Border.Effect>
					<DropShadowEffect ShadowDepth="0" Opacity="0.8" BlurRadius="10" Color="Black" />
				</Border.Effect>
				<Border Style="{StaticResource BorderClip}"
				        CornerRadius="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=15}"
				        BorderBrush="{StaticResource MediumAccentBrush}"
				        BorderThickness="2, 0, 2, 0">
					<ContentPresenter />
				</Border>
			</Border>
		</Border>
	</ControlTemplate>

	<ControlTemplate x:Key="RoundedWithShadow" TargetType="ContentControl">
		<Border BorderBrush="Transparent" BorderThickness="6"
		        CornerRadius="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=15}"
		        Background="Transparent">
			<Border>
				<Border.Effect>
					<DropShadowEffect ShadowDepth="0" Opacity="0.8" BlurRadius="10" Color="Black" />
				</Border.Effect>
				<Border Style="{StaticResource BorderClip}"
				        CornerRadius="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=15}">
					<ContentPresenter />
				</Border>
			</Border>
		</Border>
	</ControlTemplate>

	<!--Controls-->
	<Style x:Key="BaseControlStyle" TargetType="{x:Type FrameworkElement}">
		<Setter Property="Label.FontFamily" Value="{StaticResource NormalFont}" />
		<Setter Property="Label.Foreground" Value="{StaticResource DarkBrush}" />
		<Setter Property="Label.FontSize" Value="{StaticResource NormalFontSize}" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Margin" Value="5" />
	</Style>
	<Style x:Key="MediumControlStyle" TargetType="{x:Type FrameworkElement}" BasedOn="{StaticResource BaseControlStyle}">
		<Setter Property="Label.FontFamily" Value="{StaticResource SubHeaderFont}" />
		<Setter Property="Label.Foreground" Value="{StaticResource MediumBrush}" />
		<Setter Property="Label.FontSize" Value="{StaticResource SubHeaderFontSize}" />
	</Style>
	<Style x:Key="BigControlStyle" TargetType="{x:Type FrameworkElement}" BasedOn="{StaticResource BaseControlStyle}">
		<Setter Property="Label.FontFamily" Value="{StaticResource BigFont}" />
		<Setter Property="Label.FontSize" Value="{StaticResource BigFontSize}" />
	</Style>
	<Style x:Key="HintControlStyle" TargetType="{x:Type FrameworkElement}" BasedOn="{StaticResource BaseControlStyle}">
		<Setter Property="Label.FontFamily" Value="{StaticResource HintFont}" />
		<Setter Property="Label.Foreground" Value="{StaticResource DarkHintBrush}" />
		<Setter Property="Label.FontSize" Value="{StaticResource HintFontSize}" />
	</Style>

	<!--Labels/TextBlocks-->
	<Style x:Key="SubHeaderLabelStyle" TargetType="{x:Type FrameworkElement}"
	       BasedOn="{StaticResource MediumControlStyle}">
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect
					ShadowDepth="3"
					Direction="250"
					Color="Black"
					Opacity="0.36"
					BlurRadius="3" />
			</Setter.Value>
		</Setter>
	</Style>

	<!--Buttons-->
	<Style x:Key="BaseButton" TargetType="Button" BasedOn="{StaticResource BaseControlStyle}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
					        CornerRadius="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=0}">
						<Border Style="{StaticResource BorderClip}"
						        CornerRadius="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=0}">
							<Grid Background="{TemplateBinding Background}">
								<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"
								                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								                  TextBlock.Foreground="{TemplateBinding Foreground}" Margin="{TemplateBinding Padding}"
								                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Grid>
						</Border>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MediumButtonDark" TargetType="Button" BasedOn="{StaticResource BaseButton}">
		<Setter Property="FontFamily" Value="{StaticResource SubHeaderFont}" />
		<Setter Property="Foreground" Value="{StaticResource MediumBrush}" />
		<Setter Property="FontSize" Value="{StaticResource SubHeaderFontSize}" />
		<Setter Property="Padding" Value="10" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="{StaticResource LightAccentBrush}" />
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Foreground" Value="{StaticResource DarkAccentBrush}" />
				<Setter Property="Background" Value="{StaticResource MediumBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="MediumButtonRed" TargetType="Button" BasedOn="{StaticResource MediumButtonDark}">
		<Setter Property="Foreground" Value="{StaticResource LightAccentBrush}" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="{StaticResource Light2Brush}" />
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Foreground" Value="{StaticResource DarkBrush}" />
				<Setter Property="Background" Value="{StaticResource MediumBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="NormalButtonDarkBordered" TargetType="Button" BasedOn="{StaticResource BaseButton}">
		<Setter Property="Foreground" Value="{StaticResource MediumBrush}" />
		<Setter Property="Background" Value="{StaticResource LightHintBrush}" />
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="Padding" Value="5" />
		<Setter Property="BorderBrush" Value="{StaticResource LightAccentBrush}" />
		<Setter Property="BorderThickness" Value="2" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Tag" Value="15" />
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect ShadowDepth="2" Direction="330" Color="Black" Opacity="0.36" BlurRadius="3" />
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="{StaticResource LightAccentBrush}" />
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Foreground" Value="{StaticResource DarkBrush}" />
				<Setter Property="Background" Value="{StaticResource MediumAccentBrush}" />
				<Setter Property="Effect">
					<Setter.Value>
						<DropShadowEffect Opacity="0" />
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="IconButton" TargetType="Button" BasedOn="{StaticResource BaseButton}">
		<Setter Property="Padding" Value="2" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Padding" Value="0" />
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Effect">
					<Setter.Value>
						<hc:ColorComplementEffect />
					</Setter.Value>
				</Setter>
				<Setter Property="Padding" Value="4" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--TextBoxes-->
	<Style x:Key="NormalTextBox" TargetType="TextBox" BasedOn="{StaticResource TextBoxExtend}">
		<Setter Property="FontFamily" Value="{StaticResource NormalFont}" />
		<Setter Property="Foreground" Value="{StaticResource DarkBrush}" />
		<Setter Property="FontSize" Value="{StaticResource NormalFontSize}" />
	</Style>
	<Style x:Key="BiggishBox" TargetType="TextBox" BasedOn="{StaticResource TextBoxExtend}">
		<Setter Property="FontFamily" Value="{StaticResource BigFont}" />
		<Setter Property="Foreground" Value="{StaticResource DarkBrush}" />
		<Setter Property="FontSize" Value="{StaticResource SubHeaderFontSize}" />
	</Style>

</ResourceDictionary>
<UserControl x:Class="Timer.TimerSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:st="clr-namespace:AutoGrid;assembly=SpicyTaco.AutoGrid"
             xmlns:local="clr-namespace:Timer"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             x:Name="Root">

	<prism:Dialog.WindowStyle>
		<Style TargetType="Window">
			<Setter Property="WindowStyle" Value="None" />
			<Setter Property="AllowsTransparency" Value="True" />
			<Setter Property="Width" Value="520" />
			<Setter Property="SizeToContent" Value="Height" />
			<Setter Property="MinHeight" Value="100" />
			<Setter Property="MinWidth" Value="470" />
			<Setter Property="ShowInTaskbar" Value="True" />
			<Setter Property="Icon" Value="/Infrastructure;component/SharedResources/images/settings.png" />
		</Style>
	</prism:Dialog.WindowStyle>

	<UserControl.DataContext>
		<local:TimerSettingsViewModel />
	</UserControl.DataContext>

	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/Infrastructure;component/SharedResources/ResourceDictionary.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</UserControl.Resources>

	<ContentControl Template="{StaticResource RoundedWithShadowTemplate}" BorderThickness="2, 0, 2, 0"
	                BorderBrush="{StaticResource MediumAccentBrush}">
		<ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
			<DockPanel Background="{StaticResource MediumBrush}">
				<WrapPanel Width="550" x:Name="MainWrapPanel" DockPanel.Dock="Top">
					<StackPanel Orientation="Vertical" Background="{StaticResource LightBrush}" Width="550">
						<ContentControl MinWidth="200" HorizontalAlignment="Center" HorizontalContentAlignment="Stretch">
							<TextBox Margin="0, 10, 0, 0" MinWidth="60" Name="TimerName"
							         hc:InfoElement.TitleWidth="Auto" hc:InfoElement.Placeholder="Give the Timer a Name"
							         hc:InfoElement.TitlePlacement="Left" hc:InfoElement.Title="Timer Name:" hc:InfoElement.Necessary="True"
							         Style="{StaticResource NormalTextBox}" Text="{Binding Config.Name, Mode=TwoWay}" />
						</ContentControl>
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
							<TextBlock Text="Show Name:" Style="{StaticResource BaseControlStyle}" />
							<CheckBox VerticalAlignment="Center" IsChecked="{Binding Config.ShowName, Mode=TwoWay}" />
						</StackPanel>
						<TextBlock Text="Duration" Style="{StaticResource SubHeaderLabelStyle}" />
						<Label Style="{StaticResource BigControlStyle}" Content="{Binding Config.InstanceID}" />
						<st:AutoGrid Columns="*, auto, *, auto, *" Rows="auto, *"
						             HorizontalAlignment="Stretch" Orientation="Vertical" ChildMargin="5">
							<StackPanel Orientation="Horizontal">
								<CheckBox VerticalAlignment="Center" IsChecked="True" />
								<TextBlock Text="Hours" Style="{StaticResource BaseControlStyle}" />
							</StackPanel>
							<TextBox MinWidth="60" HorizontalAlignment="Stretch" Margin="5"
							         hc:InfoElement.Placeholder="##" Text="{Binding Hours, Mode=TwoWay, StringFormat=D2}"
							         TextAlignment="Center" Name="HoursBox"
							         Style="{StaticResource BiggishBox}" />
							<Rectangle />
							<TextBlock Text=":" HorizontalAlignment="Center" VerticalAlignment="Center" />
							<StackPanel Orientation="Horizontal">
								<CheckBox VerticalAlignment="Center" IsChecked="True" />
								<TextBlock Text="Minutes" Style="{StaticResource BaseControlStyle}" />
							</StackPanel>

							<TextBox MinWidth="60" HorizontalAlignment="Stretch" Margin="5"
							         hc:InfoElement.Placeholder="##" Text="{Binding Minutes, Mode=TwoWay, StringFormat=D2}"
							         TextAlignment="Center" Name="MinutesBox"
							         Style="{StaticResource BiggishBox}" />
							<Rectangle />
							<TextBlock Text=":" HorizontalAlignment="Center" VerticalAlignment="Center" />
							<StackPanel Orientation="Horizontal">
								<CheckBox VerticalAlignment="Center" IsChecked="True" />
								<TextBlock Text="Seconds" Style="{StaticResource BaseControlStyle}" />
							</StackPanel>

							<TextBox MinWidth="60" HorizontalAlignment="Stretch" Margin="5"
							         hc:InfoElement.Placeholder="##" Text="{Binding Seconds, Mode=TwoWay, StringFormat=D2}"
							         TextAlignment="Center" Name="SecondsBox"
							         Style="{StaticResource BiggishBox}" />
						</st:AutoGrid>
					</StackPanel>
					<StackPanel Width="550" Background="{StaticResource LightBrush}">
						<TextBlock Text="Hotkeys" Style="{StaticResource SubHeaderLabelStyle}" />
						<TextBlock Text="(Items in same section can have the same shortcut)" Style="{StaticResource HintControlDark}"
						           Margin="10, -5, 0, 2" />
						<local:ShortcutSetter x:Name="ResetShortcut" Label="Reset:" Hint="Reset the timer back to its max duration" />
						<Border BorderBrush="{StaticResource LightAccentBrush}" BorderThickness="2" Margin="5" Padding="2">
							<hc:FlexPanel FlexWrap="Wrap" JustifyContent="SpaceAround">
								<local:ShortcutSetter x:Name="StartShortcut" Label="Start:" Hint="Start the timer" />
								<local:ShortcutSetter x:Name="StopShortcut" Label="Stop:" Hint="Stop the timer" />
							</hc:FlexPanel>
						</Border>
						<local:ShortcutSetter x:Name="ShowHideShortcut" Label="Toggle Visibility:" Hint="Show/Hide the timer" />


					</StackPanel>
					<StackPanel Width="550" Background="{StaticResource LightBrush}">
						<TextBlock Text="Conditions to Reset" Style="{StaticResource SubHeaderLabelStyle}" />
						<StackPanel Orientation="Horizontal">
							<CheckBox Margin="5" />
							<TextBlock Style="{StaticResource BaseControlStyle}" Text="Auto-Reset Once Conditions Met" />
						</StackPanel>
						<Button Height="40" HorizontalAlignment="Center" Background="Transparent" Margin="0, 0, 0, 8"
						        Style="{StaticResource IconButtonBordered}">
							<Viewbox>
								<TextBlock Text="+" FontSize="36" Margin="0, -17, 0, -8" Style="{StaticResource HintControlDark}" />
							</Viewbox>
						</Button>
					</StackPanel>
					<StackPanel Width="550" Background="{StaticResource LightBrush}">
						<TextBlock Text="When Timer is Done" Style="{StaticResource SubHeaderLabelStyle}" />
						<StackPanel>
							<StackPanel Orientation="Horizontal">
								<CheckBox Margin="5" />
								<TextBlock Style="{StaticResource BaseControlStyle}" Text="Play a Sound:" />
								<Button Style="{StaticResource NormalButtonLight2Bordered}" Content="&lt;No File Selected&gt;" Tag="10" />
							</StackPanel>
							<StackPanel Orientation="Horizontal">
								<CheckBox Margin="5" />
								<TextBox MinWidth="60" HorizontalAlignment="Left" Margin="5"
								         hc:InfoElement.TitleWidth="Auto" hc:InfoElement.Placeholder="enter message"
								         hc:InfoElement.TitlePlacement="Left" hc:InfoElement.Title="Show Message:"
								         Style="{StaticResource NormalTextBox}" />
							</StackPanel>
							<StackPanel Orientation="Horizontal" Margin="20, -5, 0, 0">
								<CheckBox Margin="5" />
								<TextBlock Style="{StaticResource BaseControlStyle}" Text="As Alert" />
							</StackPanel>
							<StackPanel Orientation="Horizontal">
								<CheckBox Margin="5" />
								<TextBlock Style="{StaticResource BaseControlStyle}" Text="Overflow" />
								<TextBlock Style="{StaticResource HintControlDark}" Text="(Count Up)" />
							</StackPanel>
						</StackPanel>
					</StackPanel>
					<StackPanel Width="550" Background="{StaticResource LightBrush}">
						<TextBlock Text="Appearance" Style="{StaticResource SubHeaderLabelStyle}" />
						<TextBlock Text="TODO" Style="{StaticResource BaseControlStyle}" />
					</StackPanel>
					<StackPanel Width="550" Background="{StaticResource LightBrush}">
						<TextBlock Text="Misc" Style="{StaticResource SubHeaderLabelStyle}" />

						<ContentControl MinWidth="220" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch">
							<TextBox Margin="5, 2" Name="ShowDesktops"
							         hc:InfoElement.TitleWidth="Auto" hc:InfoElement.Placeholder="e.g. '2, 3' or '0' to show on all"
							         hc:InfoElement.TitlePlacement="Left" hc:InfoElement.Title="Show on desktops:"
							         Style="{StaticResource NormalTextBox}" />
						</ContentControl>
						<ContentControl MinWidth="270" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch">
							<TextBox Margin="5, 2, 5, 10" Name="ActiveDesktops"
							         hc:InfoElement.TitleWidth="Auto" hc:InfoElement.Placeholder="e.g. '2, 3' or '0' to show on all"
							         hc:InfoElement.TitlePlacement="Left" hc:InfoElement.Title="Auto-activate on desktops:"
							         Style="{StaticResource NormalTextBox}" />
						</ContentControl>
						<StackPanel Orientation="Horizontal">
							<CheckBox Margin="5" />
							<TextBlock Style="{StaticResource BaseControlStyle}" Text="Paused While Computer is Locked" />
						</StackPanel>

						<StackPanel Orientation="Horizontal">
							<CheckBox Margin="5" />
							<TextBlock Style="{StaticResource BaseControlStyle}" Text="Reset at" />
							<hc:TimePicker TimeFormat="hh:mm tt" Margin="0, 5" FontSize="{StaticResource NormalFontSize}" Name="TimePicker"
							               FontFamily="{StaticResource NormalFont}" Foreground="{StaticResource DarkBrush}">
								<hc:TimePicker.Clock>
									<hc:Clock TimeFormat="hh:mm tt" Style="{StaticResource Clok}" />
								</hc:TimePicker.Clock>
							</hc:TimePicker>
							<TextBlock Style="{StaticResource BaseControlStyle}" Text="Each Day" />
						</StackPanel>
					</StackPanel>
				</WrapPanel>

				<DockPanel Background="{StaticResource LightBrush}" LastChildFill="False" Margin="0">
					<DockPanel.Resources>
						<ResourceDictionary>
							<Style x:Key="WithValidation" TargetType="{x:Type Button}" BasedOn="{StaticResource NormalButtonDarkBordered}">
								<Setter Property="IsEnabled" Value="false" />
								<Style.Triggers>
									<!-- Require the controls to be valid in order to press OK -->
									<MultiDataTrigger>
										<MultiDataTrigger.Conditions>
											<Condition Binding="{Binding ElementName=HoursBox, Path=(Validation.HasError)}" Value="false" />
											<Condition Binding="{Binding ElementName=MinutesBox, Path=(Validation.HasError)}" Value="false" />
											<Condition Binding="{Binding ElementName=SecondsBox, Path=(Validation.HasError)}" Value="false" />
											<Condition Binding="{Binding ElementName=ShowDesktops, Path=(Validation.HasError)}" Value="false" />
											<Condition Binding="{Binding ElementName=ActiveDesktops, Path=(Validation.HasError)}" Value="false" />
											<Condition Binding="{Binding ElementName=TimePicker, Path=(Validation.HasError)}" Value="false" />
										</MultiDataTrigger.Conditions>
										<Setter Property="IsEnabled" Value="true" />
									</MultiDataTrigger>
									<MultiDataTrigger>
										<MultiDataTrigger.Conditions>
											<Condition Binding="{Binding Text, ElementName=TimerName}" Value="{x:Static s:String.Empty}" />
										</MultiDataTrigger.Conditions>
										<Setter Property="IsEnabled" Value="False" />
									</MultiDataTrigger>
								</Style.Triggers>
							</Style>
						</ResourceDictionary>
					</DockPanel.Resources>
					<Button DockPanel.Dock="Right" Content="OK" Style="{StaticResource WithValidation}"
					        Margin="5, 5, 10, 5" Padding="5, 5, 6, 5" Width="70" Command="{Binding OkCommand}" />
					<Button DockPanel.Dock="Right" Content="APPLY" Width="70" Style="{StaticResource WithValidation}"
					        Command="{Binding ApplyCommand}" />
					<Button DockPanel.Dock="Right" Content="CANCEL" Style="{StaticResource NormalButtonDarkBordered}" Width="70"
					        Command="{Binding CancelCommand}" />

				</DockPanel>

			</DockPanel>
		</ScrollViewer>
	</ContentControl>

</UserControl>